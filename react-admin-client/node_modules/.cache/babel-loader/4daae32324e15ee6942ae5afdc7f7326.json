{"ast":null,"code":"const isNil = require(\"lodash/isNil\");\n\nconst VERBOSE_ARG = \"--verbose\";\nconst CONFIG_ARG = \"--config\";\n\nfunction createNullableArg(value) {\n  return {\n    isProvided: !isNil(value),\n    value\n  };\n}\n\nconst processedArgs = {\n  verbose: false,\n  config: createNullableArg()\n};\n\nfunction findCliArg(key) {\n  const index = process.argv.indexOf(key);\n  return {\n    key,\n    index,\n    isProvided: index !== -1\n  };\n}\n\nfunction getCliArgWithValue(key) {\n  const result = function () {\n    let isProvided = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    let value = arguments.length > 1 ? arguments[1] : undefined;\n    let index = arguments.length > 2 ? arguments[2] : undefined;\n    return {\n      key,\n      isProvided,\n      value,\n      index\n    };\n  };\n\n  const arg = findCliArg(key);\n\n  if (arg.isProvided) {\n    const valueIndex = arg.index + 1;\n\n    if (process.argv[valueIndex]) {\n      return result(true, process.argv[valueIndex], arg.index);\n    }\n  }\n\n  return result();\n}\n\nconst jestConflictingArg = function (key) {\n  let hasValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return {\n    key,\n    hasValue\n  };\n}; // prettier-ignore\n\n\nconst jestConflictingArgs = [jestConflictingArg(CONFIG_ARG, true)];\n\nfunction removeJestConflictingCustomCliArgs() {\n  jestConflictingArgs.forEach(x => {\n    const arg = findCliArg(x.key);\n\n    if (arg.isProvided) {\n      process.argv.splice(arg.index, x.hasValue ? 2 : 1);\n    }\n  });\n}\n\nfunction findArgsFromCli() {\n  const verbose = findCliArg(VERBOSE_ARG);\n  const config = getCliArgWithValue(CONFIG_ARG);\n  removeJestConflictingCustomCliArgs();\n  const values = {\n    verbose: verbose.isProvided ? true : undefined,\n    config: config.isProvided ? config.value : undefined\n  };\n  setArgs(values);\n}\n\nfunction setArgs(values) {\n  if (!isNil(values)) {\n    if (!isNil(values.verbose)) {\n      processedArgs.verbose = values.verbose;\n    }\n\n    if (!isNil(values.config)) {\n      processedArgs.config = createNullableArg(values.config);\n    }\n  }\n}\n\nfunction getArgs() {\n  return processedArgs;\n}\n\nmodule.exports = {\n  getArgs,\n  setArgs,\n  findArgsFromCli\n};","map":{"version":3,"sources":["/Users/inupedia/Downloads/eCommerce Platform/react-admin-client/node_modules/@craco/craco/lib/args.js"],"names":["isNil","require","VERBOSE_ARG","CONFIG_ARG","createNullableArg","value","isProvided","processedArgs","verbose","config","findCliArg","key","index","process","argv","indexOf","getCliArgWithValue","result","arg","valueIndex","jestConflictingArg","hasValue","jestConflictingArgs","removeJestConflictingCustomCliArgs","forEach","x","splice","findArgsFromCli","values","undefined","setArgs","getArgs","module","exports"],"mappings":"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","sourcesContent":["const isNil = require(\"lodash/isNil\");\n\nconst VERBOSE_ARG = \"--verbose\";\nconst CONFIG_ARG = \"--config\";\n\nfunction createNullableArg(value) {\n    return {\n        isProvided: !isNil(value),\n        value\n    };\n}\n\nconst processedArgs = {\n    verbose: false,\n    config: createNullableArg()\n};\n\nfunction findCliArg(key) {\n    const index = process.argv.indexOf(key);\n\n    return {\n        key,\n        index,\n        isProvided: index !== -1\n    };\n}\n\nfunction getCliArgWithValue(key) {\n    const result = (isProvided = false, value, index) => ({\n        key,\n        isProvided,\n        value,\n        index\n    });\n\n    const arg = findCliArg(key);\n\n    if (arg.isProvided) {\n        const valueIndex = arg.index + 1;\n\n        if (process.argv[valueIndex]) {\n            return result(true, process.argv[valueIndex], arg.index);\n        }\n    }\n\n    return result();\n}\n\nconst jestConflictingArg = (key, hasValue = false) => ({\n    key,\n    hasValue\n});\n\n// prettier-ignore\nconst jestConflictingArgs = [\n    jestConflictingArg(CONFIG_ARG, true),\n];\n\nfunction removeJestConflictingCustomCliArgs() {\n    jestConflictingArgs.forEach(x => {\n        const arg = findCliArg(x.key);\n\n        if (arg.isProvided) {\n            process.argv.splice(arg.index, x.hasValue ? 2 : 1);\n        }\n    });\n}\n\nfunction findArgsFromCli() {\n    const verbose = findCliArg(VERBOSE_ARG);\n    const config = getCliArgWithValue(CONFIG_ARG);\n\n    removeJestConflictingCustomCliArgs();\n\n    const values = {\n        verbose: verbose.isProvided ? true : undefined,\n        config: config.isProvided ? config.value : undefined\n    };\n\n    setArgs(values);\n}\n\nfunction setArgs(values) {\n    if (!isNil(values)) {\n        if (!isNil(values.verbose)) {\n            processedArgs.verbose = values.verbose;\n        }\n\n        if (!isNil(values.config)) {\n            processedArgs.config = createNullableArg(values.config);\n        }\n    }\n}\n\nfunction getArgs() {\n    return processedArgs;\n}\n\nmodule.exports = {\n    getArgs,\n    setArgs,\n    findArgsFromCli\n};\n"]},"metadata":{},"sourceType":"script"}